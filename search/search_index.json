{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"English \u2003 Fran\u00e7ais","title":"Home"},{"location":"code/","text":"Repository The cffdrs-ng GitHub repository contains the up-to-date code for the CFFDRS2025 modules in three programming languages: R, C, and Python. All three languages contain the same equations and perform the same tasks, the choice is yours depending on your system requirement. The Canadian Forest Fire Weather Index (FWI) is a major subsystem of the CFFDRS. FWI2025 is the next generation FWI system corresponding to the CFFDRS2025. Below describes the files, data inputs, parameters, and outputs in a general way for all three languages, any deviations for a specific language will be noted. FWI2025 Code Scripts Each programming language has two scripts that are required to generate FWI2025 outputs: \"NG_FWI\" holds the functions and equations for generating FWI2025 outputs. R : NG_FWI.r Python : NG_FWI.py C : NG_FWI.c \"util\" includes basic functions that are not part of FWI2025 equations, but generate intermediate information for the calculation of the FWI2025 components (e.g. time of sunrise and sunset, number of sunlight hours). This script also includes the process to generate the daily summary output. R : util.r Python : util.py C : util.c , util.h Packages The FWI2025 scripts require different sets of language-specific libraries or packages. These must be installed prior to running \"NG_FWI\". R : lubridate and data.table Python : datetime, logging, math, numpy, pandas, os.path, sys C : stdlib.h, stdbool.h, string.h Get Started The cffdrs-ng GitHub repository also includes a tutorial script and test data. See the Tutorial page for a step-by-step workflow with hourly data. The documentation below goes into details about specific functions and data requirements. FWI2025 Documentation FWI2025 code is written for and tested using input data in the form of a table/array, commonly imported as comma-separated value (.csv) files. Outputs are then also of the same form. Users can configure the input and output file types to fit their individual data streams. See the How to calculate hourly FWI tutorial for an example that applies the FWI2025 code on a publicly available dataset. Hourly Fire Weather Index The hFWI() function in the \"NG_FWI\" file is built to generate FWI System outputs one station at a time. The R and Python versions can also output multiple stations with a properly formatted input. The C version can only handle inputs of a single year for a given station. Input Data The Fire Weather Index System was originally designed to be calculated using data recorded at local weather stations . As a result, descriptions below reference weather station data as input. In reality, any collected or calculated weather data (e.g. gridded data, forecast data, etc.) that includes the standard variables required as input to the FWI System can be used. See the Weather Guide for a description of weather data input standards for the FWI System. The rows of the dataframe should correspond to consecutive hourly data. The columns and data types of the input dataframe are as follows: Column Description id Weather station identifier, a unique number for the station, text or number lat Latitude. Location of weather station, decimal degrees (double precision) long Longitude. Location of weather station, decimal degrees (double precision) yr Year of weather station reading, number YYYY mon Month of weather station reading, number M or MM (must be consistent throughout the dataset) day Day of weather station reading, number DD or D (must be consistent throughout the dataset) hr Hour of weather station reading, number in military time (0-23) temp Temperature in \u00b0Celsius, number rh Relative humidity in percent, number (0-100) ws Wind speed in km/hr, number prec Precipitation (rain) measured in millimeters (mm), number solrad Solar Radiation measured in kw/m2 (kilowatts per meter squared) for grassland codes, number. OPTIONAL input, FWI2025 will generate based on default method. ( read more about solar radiation sensors and minimum requirements ) percent_cured Percent Cured of grasses in open grassland, measured in percent for grassland codes, number (0-100). OPTIONAL input, FWI2025 will generate based on default method The column headers can be lower case or upper case, the output format is set to upper case. In addition to the weather variables, the function to generate hourly FWI2025 outputs requires the timezone where the weather station is located and the start-up value for the moisture codes (e.g. FFMC of 85, DMC of 6 and DC of 15). See the next section below to see where it is specified. Function Parameters R : hFWI(df_wx, timezone, ffmc_old = 85, dmc_old = 6, dc_old = 15) Parameter Description df_wx data frame or formatted table (can have multiple years and stations, needs to be temporally sequential during a given year) timezone timezone in which the weather station is located as the number of offset hours from UTC (e.g. for stations in Central Standard time the timezone is set to -6) ffmc_old dmc_old the start-up value of the duff moisture code (e.g. 6, this is the default) dc_old the start-up value of the drought code (e.g. 15, this is the default) Python : hFWI(df_wx, ffmc_old = 85, dmc_old = 6, dc_old = 15, silent = False) Parameter Description df_wx data frame or formatted table (can have multiple years and stations, needs to be temporally sequential during a given year) timezone timezone in which the weather station is located ffmc_old the startup value of the fine fuel moisture code (e.g. 85, this is the default) dmc_old the start-up value of the duff moisture code (e.g. 6, this is the default) dc_old the start-up value of the drought code (e.g. 15, this is the default) silent print progress messages to monitor script. True or False, False by default C : The C version can be run from command line with the following arguments in order: Parameter Description local GMToffset timezone in which the weather station is located starting FFMC the startup value of the fine fuel moisture code (e.g. 85) starting DMC the start-up value of the duff moisture code (e.g. 6) starting DC the start-up value of the drought code (e.g. 15) input file name of .csv file containing data for a single station over the course of a year output file name of the file to output results into Output Description The output is also the same format as the input data, with the following columns appended: Parameter Description timestamp date and time of weather and FWI variable. Timestamp YYYY-MM-DD HH:MM:SS. (not in C) date YYYY-MM-DD Date type (without hh:mm:ss). (not in C) sunrise Time of sunrise based on the latitude, longitude, and date (decimal time). (not in C) sunset Time of sunset based on the latitude, longitude, and date (decimal time). (not in C) sunlight_hours Number of hours between sunrise and sunset (decimal time). (not in C) solrad Solar Radiation measured in kw/m2 (kilowatts per meter squared) for grassland codes, generated automatically if missing from input (number). (needs to be calculated using make_inputs.c if not given) percent_cured percent of cured (dead) grass fuels in grasslands, generated automatically if missing from input. Used exclusively in the Grassland calculations. Percentage as number (0-100). (needs to be calculated using make_inputs.c if not given) grass_fuel_load The standard grass fuel load is built into the Python and R code, 0.35kg/m2. (needs to be calculated using make_inputs.c if not given, generates a column with the standard value) ffmc Fine Fuel Moisture Code (number) dmc Duff Moisture Code (number) dc Drought Code (number) isi Initial Spread Index (number) bui Buildup Index (number) fwi Fire Weather Index (number) dsr Daily Severity Rating (number) gfmc Grass Fuel Moisture Code, 0-101 similar to FFMC (number) gsi Grassland Spread Index (number) gfwi Grassland Fire Weather Index (number) Daily Summaries The hourly FWI output can be summarized in a variety of ways depending on usage and requirements. These can be found within the \u2018util\u2019 file. generate_daily_summaries() boils down the hourly data into some daily metrics. Input Data The only input to generate_daily_summaries() is the output from hFWI() . Function Parameters R : generate_daily_summaries <- function(hourly_data) {} Python : def generate_daily_summaries(hourly_data): C : hourly_data = the output dataframe generated by NG_FWI Output Description Parameter Description wstnid weather station id, or unique identifier for the weather station year Year, YYYY, number (e.g. 2024) mon month, M, number (e.g. 3) day day, D number (e.g. 8) sunrise Time of sunrise. HH:MM:SS timestamp format in military time (e.g. 06:30:55) sunset Time of sunset. HH:MM:SS timestamp format in military time (e.g. 19:45:05) peak_time The hour, H in military time (0-23), number format. The hour where one might expect maximum fire behaviour as expressed by a modified ISI (see definitions of wind_speed_smoothed and peak_isi_smoothed below). If the peak ISI (from peak_isi_smoothed field) is less than five, the peak_time is set to 17:00 hours duration number of hours, number format. Can also be called duration of a burning window, number of hours in the day where one could expect an active fire (where a modified ISI is equal or greater than five). If the ISI did not reach 5 or greater, the duration is zero wind_speed_smoothed Wind Speed (km/hr), double precision. Hourly wind speed recorded based on a 10 min average can be noisy hour-to-hour, this makes it difficult to estimate the duration of a burning window. To estimate the duration of a burning window and peak time, the hourly windspeed is smoothed and the ISI is recalculated based on the smoothed wind speed and FFMC peak_isi_smoothed Maximum Initial Spread Index (ISI) recalculated based on FFMC and smoothed wind speed from \u2018wind_speed_smoothed\u2019, double precision number. Number, double precision ffmc Fine Fuel Moisture Code corresponding to the FFMC at the hour of peak time. Number, double precision dmc Duff Moisture Code corresponding to the DMC at the hour of peak. Number, double precision dc Drought Code corresponding to the DC at the hour of peak time. Number, double precision isi Initial Spread Index corresponding to the ISI at the hour of peak time. Number, double precision bui Buildup Index corresponding to the BUI at the hour of peak time. Number, double precision fwi Fire Weather Index corresponding to the FWI at the hour of peak time. Number, double precision dsr Daily Severity Rating corresponding to the DSR at the hour of peak time. Number, double precision gfmc Grass Fuel Moisture Code corresponding to the GFMC at the hour of peak time. Number, double precision gsi Grassland Spread Index corresponding to the GSI at the hour of peak time. Number, double precision gfwi Grassland Fire Weather Index corresponding to the GFWI at the hour of peak time. Number, double precision Functions R Python C License","title":"Code"},{"location":"code/#repository","text":"The cffdrs-ng GitHub repository contains the up-to-date code for the CFFDRS2025 modules in three programming languages: R, C, and Python. All three languages contain the same equations and perform the same tasks, the choice is yours depending on your system requirement. The Canadian Forest Fire Weather Index (FWI) is a major subsystem of the CFFDRS. FWI2025 is the next generation FWI system corresponding to the CFFDRS2025. Below describes the files, data inputs, parameters, and outputs in a general way for all three languages, any deviations for a specific language will be noted.","title":"Repository"},{"location":"code/#fwi2025-code","text":"","title":"FWI2025 Code"},{"location":"code/#scripts","text":"Each programming language has two scripts that are required to generate FWI2025 outputs: \"NG_FWI\" holds the functions and equations for generating FWI2025 outputs. R : NG_FWI.r Python : NG_FWI.py C : NG_FWI.c \"util\" includes basic functions that are not part of FWI2025 equations, but generate intermediate information for the calculation of the FWI2025 components (e.g. time of sunrise and sunset, number of sunlight hours). This script also includes the process to generate the daily summary output. R : util.r Python : util.py C : util.c , util.h","title":"Scripts"},{"location":"code/#packages","text":"The FWI2025 scripts require different sets of language-specific libraries or packages. These must be installed prior to running \"NG_FWI\". R : lubridate and data.table Python : datetime, logging, math, numpy, pandas, os.path, sys C : stdlib.h, stdbool.h, string.h","title":"Packages"},{"location":"code/#get-started","text":"The cffdrs-ng GitHub repository also includes a tutorial script and test data. See the Tutorial page for a step-by-step workflow with hourly data. The documentation below goes into details about specific functions and data requirements.","title":"Get Started"},{"location":"code/#fwi2025-documentation","text":"FWI2025 code is written for and tested using input data in the form of a table/array, commonly imported as comma-separated value (.csv) files. Outputs are then also of the same form. Users can configure the input and output file types to fit their individual data streams. See the How to calculate hourly FWI tutorial for an example that applies the FWI2025 code on a publicly available dataset.","title":"FWI2025 Documentation"},{"location":"code/#hourly-fire-weather-index","text":"The hFWI() function in the \"NG_FWI\" file is built to generate FWI System outputs one station at a time. The R and Python versions can also output multiple stations with a properly formatted input. The C version can only handle inputs of a single year for a given station.","title":"Hourly Fire Weather Index"},{"location":"code/#input-data","text":"The Fire Weather Index System was originally designed to be calculated using data recorded at local weather stations . As a result, descriptions below reference weather station data as input. In reality, any collected or calculated weather data (e.g. gridded data, forecast data, etc.) that includes the standard variables required as input to the FWI System can be used. See the Weather Guide for a description of weather data input standards for the FWI System. The rows of the dataframe should correspond to consecutive hourly data. The columns and data types of the input dataframe are as follows: Column Description id Weather station identifier, a unique number for the station, text or number lat Latitude. Location of weather station, decimal degrees (double precision) long Longitude. Location of weather station, decimal degrees (double precision) yr Year of weather station reading, number YYYY mon Month of weather station reading, number M or MM (must be consistent throughout the dataset) day Day of weather station reading, number DD or D (must be consistent throughout the dataset) hr Hour of weather station reading, number in military time (0-23) temp Temperature in \u00b0Celsius, number rh Relative humidity in percent, number (0-100) ws Wind speed in km/hr, number prec Precipitation (rain) measured in millimeters (mm), number solrad Solar Radiation measured in kw/m2 (kilowatts per meter squared) for grassland codes, number. OPTIONAL input, FWI2025 will generate based on default method. ( read more about solar radiation sensors and minimum requirements ) percent_cured Percent Cured of grasses in open grassland, measured in percent for grassland codes, number (0-100). OPTIONAL input, FWI2025 will generate based on default method The column headers can be lower case or upper case, the output format is set to upper case. In addition to the weather variables, the function to generate hourly FWI2025 outputs requires the timezone where the weather station is located and the start-up value for the moisture codes (e.g. FFMC of 85, DMC of 6 and DC of 15). See the next section below to see where it is specified.","title":"Input Data"},{"location":"code/#function-parameters","text":"R : hFWI(df_wx, timezone, ffmc_old = 85, dmc_old = 6, dc_old = 15) Parameter Description df_wx data frame or formatted table (can have multiple years and stations, needs to be temporally sequential during a given year) timezone timezone in which the weather station is located as the number of offset hours from UTC (e.g. for stations in Central Standard time the timezone is set to -6) ffmc_old dmc_old the start-up value of the duff moisture code (e.g. 6, this is the default) dc_old the start-up value of the drought code (e.g. 15, this is the default) Python : hFWI(df_wx, ffmc_old = 85, dmc_old = 6, dc_old = 15, silent = False) Parameter Description df_wx data frame or formatted table (can have multiple years and stations, needs to be temporally sequential during a given year) timezone timezone in which the weather station is located ffmc_old the startup value of the fine fuel moisture code (e.g. 85, this is the default) dmc_old the start-up value of the duff moisture code (e.g. 6, this is the default) dc_old the start-up value of the drought code (e.g. 15, this is the default) silent print progress messages to monitor script. True or False, False by default C : The C version can be run from command line with the following arguments in order: Parameter Description local GMToffset timezone in which the weather station is located starting FFMC the startup value of the fine fuel moisture code (e.g. 85) starting DMC the start-up value of the duff moisture code (e.g. 6) starting DC the start-up value of the drought code (e.g. 15) input file name of .csv file containing data for a single station over the course of a year output file name of the file to output results into","title":"Function Parameters"},{"location":"code/#output-description","text":"The output is also the same format as the input data, with the following columns appended: Parameter Description timestamp date and time of weather and FWI variable. Timestamp YYYY-MM-DD HH:MM:SS. (not in C) date YYYY-MM-DD Date type (without hh:mm:ss). (not in C) sunrise Time of sunrise based on the latitude, longitude, and date (decimal time). (not in C) sunset Time of sunset based on the latitude, longitude, and date (decimal time). (not in C) sunlight_hours Number of hours between sunrise and sunset (decimal time). (not in C) solrad Solar Radiation measured in kw/m2 (kilowatts per meter squared) for grassland codes, generated automatically if missing from input (number). (needs to be calculated using make_inputs.c if not given) percent_cured percent of cured (dead) grass fuels in grasslands, generated automatically if missing from input. Used exclusively in the Grassland calculations. Percentage as number (0-100). (needs to be calculated using make_inputs.c if not given) grass_fuel_load The standard grass fuel load is built into the Python and R code, 0.35kg/m2. (needs to be calculated using make_inputs.c if not given, generates a column with the standard value) ffmc Fine Fuel Moisture Code (number) dmc Duff Moisture Code (number) dc Drought Code (number) isi Initial Spread Index (number) bui Buildup Index (number) fwi Fire Weather Index (number) dsr Daily Severity Rating (number) gfmc Grass Fuel Moisture Code, 0-101 similar to FFMC (number) gsi Grassland Spread Index (number) gfwi Grassland Fire Weather Index (number)","title":"Output Description"},{"location":"code/#daily-summaries","text":"The hourly FWI output can be summarized in a variety of ways depending on usage and requirements. These can be found within the \u2018util\u2019 file. generate_daily_summaries() boils down the hourly data into some daily metrics.","title":"Daily Summaries"},{"location":"code/#input-data_1","text":"The only input to generate_daily_summaries() is the output from hFWI() .","title":"Input Data"},{"location":"code/#function-parameters_1","text":"R : generate_daily_summaries <- function(hourly_data) {} Python : def generate_daily_summaries(hourly_data): C : hourly_data = the output dataframe generated by NG_FWI","title":"Function Parameters"},{"location":"code/#output-description_1","text":"Parameter Description wstnid weather station id, or unique identifier for the weather station year Year, YYYY, number (e.g. 2024) mon month, M, number (e.g. 3) day day, D number (e.g. 8) sunrise Time of sunrise. HH:MM:SS timestamp format in military time (e.g. 06:30:55) sunset Time of sunset. HH:MM:SS timestamp format in military time (e.g. 19:45:05) peak_time The hour, H in military time (0-23), number format. The hour where one might expect maximum fire behaviour as expressed by a modified ISI (see definitions of wind_speed_smoothed and peak_isi_smoothed below). If the peak ISI (from peak_isi_smoothed field) is less than five, the peak_time is set to 17:00 hours duration number of hours, number format. Can also be called duration of a burning window, number of hours in the day where one could expect an active fire (where a modified ISI is equal or greater than five). If the ISI did not reach 5 or greater, the duration is zero wind_speed_smoothed Wind Speed (km/hr), double precision. Hourly wind speed recorded based on a 10 min average can be noisy hour-to-hour, this makes it difficult to estimate the duration of a burning window. To estimate the duration of a burning window and peak time, the hourly windspeed is smoothed and the ISI is recalculated based on the smoothed wind speed and FFMC peak_isi_smoothed Maximum Initial Spread Index (ISI) recalculated based on FFMC and smoothed wind speed from \u2018wind_speed_smoothed\u2019, double precision number. Number, double precision ffmc Fine Fuel Moisture Code corresponding to the FFMC at the hour of peak time. Number, double precision dmc Duff Moisture Code corresponding to the DMC at the hour of peak. Number, double precision dc Drought Code corresponding to the DC at the hour of peak time. Number, double precision isi Initial Spread Index corresponding to the ISI at the hour of peak time. Number, double precision bui Buildup Index corresponding to the BUI at the hour of peak time. Number, double precision fwi Fire Weather Index corresponding to the FWI at the hour of peak time. Number, double precision dsr Daily Severity Rating corresponding to the DSR at the hour of peak time. Number, double precision gfmc Grass Fuel Moisture Code corresponding to the GFMC at the hour of peak time. Number, double precision gsi Grassland Spread Index corresponding to the GSI at the hour of peak time. Number, double precision gfwi Grassland Fire Weather Index corresponding to the GFWI at the hour of peak time. Number, double precision","title":"Output Description"},{"location":"code/#functions","text":"R Python C","title":"Functions"},{"location":"code/#license","text":"","title":"License"},{"location":"contact/","text":"Newsletter Sign-up Test- gabrielle was here Fire Danger Group Members Gabrielle Ayres (she, her | elle, elle) Research Mobilization Analyst gabrielle.ayres@nrcan-rncan.gc.ca Jonathan Boucher Forests Fire Researcher jonathan.boucher@nrcan-rncan.gc.ca Luke Collins Research Scientist luke.collins@nrcan-rncan.gc.ca Anne Cotton-Gagnon (elle, elle | she, her) Forestry Research Officer anne.cotton-gagnon@nrcan-rncan.gc.ca Patrick Deane (he, him | il, lui) Forest Fire Research Specialist Great Lakes Forestry Centre Bio patrick.deane@nrcan-rncan.gc.ca Chelene Hanes Wildland Fire Research Scientist Great Lakes Forestry Centre Bio chelene.hanes@nrcan-rncan.gc.ca Natasha Jurko Physical Fire Scientist Great Lakes Forestry Centre natasha.jurko@nrcan-rncan.gc.ca Samuel Lacarte (he, him | il, lui) Fire Research Officer samuel.lacarte@nrcan-rncan.gc.ca Daniel Perrakis Research Scientist daniel.perrakis@nrcan-rncan.gc.ca Mackenzie Simpson IT Analyst Great Lakes Forestry Centre mackenzie.simpson@nrcan-rncan.gc.ca Kevin Siu (he, him | il, lui) Wildfire Analyst Programmer Website Overseer Great Lakes Forestry Centre kevin.siu@nrcan-rncan.gc.ca Steve Taylor Forest Fire Research Scientist steve.taylor@nrcan-rncan.gc.ca Daniel Thompson (he, him | il, lui) Forest Fire Research Scientist daniel.thompson@nrcan-rncan.gc.ca Derek van der Kamp Research Scientist derek.vanderkamp@nrcan-rncan.gc.ca Mike Wotton Forest Fire Research Scientist mike.wotton@daniels.utoronto.ca","title":"Contact"},{"location":"contact/#newsletter-sign-up","text":"Test- gabrielle was here","title":"Newsletter Sign-up"},{"location":"contact/#fire-danger-group","text":"","title":"Fire Danger Group"},{"location":"contact/#members","text":"Gabrielle Ayres (she, her | elle, elle) Research Mobilization Analyst gabrielle.ayres@nrcan-rncan.gc.ca Jonathan Boucher Forests Fire Researcher jonathan.boucher@nrcan-rncan.gc.ca Luke Collins Research Scientist luke.collins@nrcan-rncan.gc.ca Anne Cotton-Gagnon (elle, elle | she, her) Forestry Research Officer anne.cotton-gagnon@nrcan-rncan.gc.ca Patrick Deane (he, him | il, lui) Forest Fire Research Specialist Great Lakes Forestry Centre Bio patrick.deane@nrcan-rncan.gc.ca Chelene Hanes Wildland Fire Research Scientist Great Lakes Forestry Centre Bio chelene.hanes@nrcan-rncan.gc.ca Natasha Jurko Physical Fire Scientist Great Lakes Forestry Centre natasha.jurko@nrcan-rncan.gc.ca Samuel Lacarte (he, him | il, lui) Fire Research Officer samuel.lacarte@nrcan-rncan.gc.ca Daniel Perrakis Research Scientist daniel.perrakis@nrcan-rncan.gc.ca Mackenzie Simpson IT Analyst Great Lakes Forestry Centre mackenzie.simpson@nrcan-rncan.gc.ca Kevin Siu (he, him | il, lui) Wildfire Analyst Programmer Website Overseer Great Lakes Forestry Centre kevin.siu@nrcan-rncan.gc.ca Steve Taylor Forest Fire Research Scientist steve.taylor@nrcan-rncan.gc.ca Daniel Thompson (he, him | il, lui) Forest Fire Research Scientist daniel.thompson@nrcan-rncan.gc.ca Derek van der Kamp Research Scientist derek.vanderkamp@nrcan-rncan.gc.ca Mike Wotton Forest Fire Research Scientist mike.wotton@daniels.utoronto.ca","title":"Members"},{"location":"home/","text":"About The Canadian Forest Fire Danger Rating System (CFFDRS) is the principal source of fire information for all wildland fire management agencies across Canada. It has widespread use as a regional and fireline safety and awareness tool. The CFFDRS is undergoing extensive revisions under the name Next Generation CFFDRS (NG-CFFDRS) , with rollout to practitioners occurring during 2024, 2025, and beyond. The primary goal is to meet the evolving needs of advanced users while maintaining it's original simplicity and effectiveness. This website is intended to: inform users about the ongoing changes to the CFFDRS centralize access to the code and documentation host tutorials for new users For those unfamiliar with the CFFDRS, read more about the system at the Government of Canada CFFDRS page . For official information regarding wildfires in Canada, visit the Government of Canada wildfire pages . Note, while some links to the current CFFDRS1992 and the new CFFDRS2025 can be found here, more information and publications regarding current and historical CFFDRS documentation can be found on the NRCan Open S&T Repository (OSTR) . Announcements January 2025 The NG-CFFDRS Fire Weather Index (FWI) System module is available for users to test. Release of the other modules of the CFFDRS (e.g. FBP System, FMS, and FOP System) is ongoing.","title":"Home"},{"location":"home/#about","text":"The Canadian Forest Fire Danger Rating System (CFFDRS) is the principal source of fire information for all wildland fire management agencies across Canada. It has widespread use as a regional and fireline safety and awareness tool. The CFFDRS is undergoing extensive revisions under the name Next Generation CFFDRS (NG-CFFDRS) , with rollout to practitioners occurring during 2024, 2025, and beyond. The primary goal is to meet the evolving needs of advanced users while maintaining it's original simplicity and effectiveness. This website is intended to: inform users about the ongoing changes to the CFFDRS centralize access to the code and documentation host tutorials for new users For those unfamiliar with the CFFDRS, read more about the system at the Government of Canada CFFDRS page . For official information regarding wildfires in Canada, visit the Government of Canada wildfire pages . Note, while some links to the current CFFDRS1992 and the new CFFDRS2025 can be found here, more information and publications regarding current and historical CFFDRS documentation can be found on the NRCan Open S&T Repository (OSTR) .","title":"About"},{"location":"home/#announcements","text":"","title":"Announcements"},{"location":"home/#january-2025","text":"The NG-CFFDRS Fire Weather Index (FWI) System module is available for users to test. Release of the other modules of the CFFDRS (e.g. FBP System, FMS, and FOP System) is ongoing.","title":"January 2025"},{"location":"resources/","text":"Data Canadian Wildland Fire Information System (CWFIS) Canadian Interagency Forest Fire Centre (CIFFC) Reports Next Generation CFFDRS (NG-CFFDRS) Other Canadian Forest Fire Danger Rating System (CFFDRS) Government of Canada Natural Resources Canada Link Hubs Wildland Fires Wildfires Information Forest fires Fire Management","title":"Resources"},{"location":"resources/#data","text":"Canadian Wildland Fire Information System (CWFIS) Canadian Interagency Forest Fire Centre (CIFFC)","title":"Data"},{"location":"resources/#reports","text":"Next Generation CFFDRS (NG-CFFDRS)","title":"Reports"},{"location":"resources/#other","text":"Canadian Forest Fire Danger Rating System (CFFDRS) Government of Canada Natural Resources Canada Link Hubs Wildland Fires Wildfires Information Forest fires Fire Management","title":"Other"},{"location":"tutorials/","text":"How to calculate hourly FWI \u2013 the new FWI2025 This tutorial is designed to be an example of how to calculate FWI2025 with tabular data. The data has been formatted for correct column names and is in a sequential hourly format. The data has been pre-formatted for correct column names, and is in a sequential hourly format. *R version is available What you'll need: Go to the CFFDRS-NG repo and fork/clone/download the following in the language of your choice: NG_FWI.r , OR NG_FWI.py , OR NG_FWI.c util.r , OR util.py , OR util.c and util.h /data/wx_prf.csv (the data file we will work with) Tutorial_NGFWI.r , OR Tutorial_NGFWI.py Prior to running this tutorial, the user should ensure they have the necessary packages and libraries installed. Each programming language references different packages or libraries, see Code#Documentation for more details, or look in the code files. Step 1: Open the data file: wx_prf.csv About the file: This file contains hourly weather recorded from weather station at the Petawawa Research Forest, during a field season in 2007. The data is sorted into ascending order and has not gaps. The column headers are formatted with the expected inputs, details on the input requirements can be found in Code#Documentation . Notice there is no input for solar radiation ( sol_rad ) or curing faction ( percent_cure ), these are optional inputs and if they are not in the input file, they will be automatically estimated. Open the Tutorial_NGFWI.xx code file. This file contains the step by step process for running NG_FWI. Step 2: Change the file path and load your data file.","title":"Tutorials"},{"location":"tutorials/#how-to-calculate-hourly-fwi-the-new-fwi2025","text":"This tutorial is designed to be an example of how to calculate FWI2025 with tabular data. The data has been formatted for correct column names and is in a sequential hourly format. The data has been pre-formatted for correct column names, and is in a sequential hourly format. *R version is available","title":"How to calculate hourly FWI \u2013 the new FWI2025"},{"location":"tutorials/#what-youll-need","text":"Go to the CFFDRS-NG repo and fork/clone/download the following in the language of your choice: NG_FWI.r , OR NG_FWI.py , OR NG_FWI.c util.r , OR util.py , OR util.c and util.h /data/wx_prf.csv (the data file we will work with) Tutorial_NGFWI.r , OR Tutorial_NGFWI.py Prior to running this tutorial, the user should ensure they have the necessary packages and libraries installed. Each programming language references different packages or libraries, see Code#Documentation for more details, or look in the code files.","title":"What you'll need:"},{"location":"tutorials/#step-1","text":"Open the data file: wx_prf.csv About the file: This file contains hourly weather recorded from weather station at the Petawawa Research Forest, during a field season in 2007. The data is sorted into ascending order and has not gaps. The column headers are formatted with the expected inputs, details on the input requirements can be found in Code#Documentation . Notice there is no input for solar radiation ( sol_rad ) or curing faction ( percent_cure ), these are optional inputs and if they are not in the input file, they will be automatically estimated. Open the Tutorial_NGFWI.xx code file. This file contains the step by step process for running NG_FWI.","title":"Step 1:"},{"location":"tutorials/#step-2","text":"Change the file path and load your data file.","title":"Step 2:"},{"location":"code/c/","text":"","title":"C"},{"location":"code/python/","text":"","title":"Python"},{"location":"code/r/","text":"","title":"R"},{"location":"contact/chanes/","text":"Chelene Hanes Wildland Fire Research Scientist Great Lakes Forestry Centre chelene.hanes@nrcan-rncan.gc.ca Firelab , NRCan Dr Chelene Hanes is a prominent figure in wildland fire management, currently serving as a key expert at the Canadian Forest Service (CFS). With extensive experience in fire behavior research, fire weather, and drought impacts on wildfire activity, Chelene has made significant contributions to the understanding of how environmental factors influence fire regimes in Canada. Her work at the intersection of science and operational fire management has positioned her as a thought leader in promoting evidence-based practices for wildfire prevention and mitigation. Chelene's role at CFS includes advancing wildfire danger reduction strategies, collaborating with national and international partners, and contributing to major initiatives that address the increasing complexity of wildfire management in the context of climate change. Known for her strategic thinking and dedication to capacity building, she is deeply involved in efforts to develop tools and models within the Canadian Forest Fire Danger Rating System, the primary decision-making tool used by wildfire management Chelene lives in Sault Ste. Marie, Ontario with her husband and two daughters.","title":"Chanes"},{"location":"contact/chanes/#chelene-hanes","text":"Wildland Fire Research Scientist Great Lakes Forestry Centre chelene.hanes@nrcan-rncan.gc.ca Firelab , NRCan Dr Chelene Hanes is a prominent figure in wildland fire management, currently serving as a key expert at the Canadian Forest Service (CFS). With extensive experience in fire behavior research, fire weather, and drought impacts on wildfire activity, Chelene has made significant contributions to the understanding of how environmental factors influence fire regimes in Canada. Her work at the intersection of science and operational fire management has positioned her as a thought leader in promoting evidence-based practices for wildfire prevention and mitigation. Chelene's role at CFS includes advancing wildfire danger reduction strategies, collaborating with national and international partners, and contributing to major initiatives that address the increasing complexity of wildfire management in the context of climate change. Known for her strategic thinking and dedication to capacity building, she is deeply involved in efforts to develop tools and models within the Canadian Forest Fire Danger Rating System, the primary decision-making tool used by wildfire management Chelene lives in Sault Ste. Marie, Ontario with her husband and two daughters.","title":"Chelene Hanes"},{"location":"contact/pdeane/","text":"Patrick Deane (he, him | il, lui) Forest Fire Research Specialist Great Lakes Forestry Centre patrick.deane@nrcan-rncan.gc.ca NRCan Patrick is a Forest Fire Research Specialist with the Canadian Forest Service based out of the Great Lakes Forestry Centre in Sault Ste. Marie, Ontario. Patrick works closely with Dr Chelene Hanes, supporting her research on fire behavior, fire weather, and drought impacts on wildfire activity. In addition to collaborating with fellow researchers, Patrick often works directly with operational fire management staff to implement research practices to aid in decision-making. Patrick is heavily involved in the collection of field data, including setup and maintenance of environmental stations, as well as data management and analysis that contribute towards tools and models within the Canadian Forest Fire Danger Rating System. Prior to starting with the Canadian Forest Service, Patrick attended McMaster University where his graduate research focused on ecohydrological approaches to fuel management in peatland ecosystems in the boreal region of Alberta. Patrick also spent two seasons as a wildland firefighter in Alberta. These experiences continue to provide important context and inform his research activities.","title":"Pdeane"},{"location":"contact/pdeane/#patrick-deane","text":"(he, him | il, lui) Forest Fire Research Specialist Great Lakes Forestry Centre patrick.deane@nrcan-rncan.gc.ca NRCan Patrick is a Forest Fire Research Specialist with the Canadian Forest Service based out of the Great Lakes Forestry Centre in Sault Ste. Marie, Ontario. Patrick works closely with Dr Chelene Hanes, supporting her research on fire behavior, fire weather, and drought impacts on wildfire activity. In addition to collaborating with fellow researchers, Patrick often works directly with operational fire management staff to implement research practices to aid in decision-making. Patrick is heavily involved in the collection of field data, including setup and maintenance of environmental stations, as well as data management and analysis that contribute towards tools and models within the Canadian Forest Fire Danger Rating System. Prior to starting with the Canadian Forest Service, Patrick attended McMaster University where his graduate research focused on ecohydrological approaches to fuel management in peatland ecosystems in the boreal region of Alberta. Patrick also spent two seasons as a wildland firefighter in Alberta. These experiences continue to provide important context and inform his research activities.","title":"Patrick Deane"}]}